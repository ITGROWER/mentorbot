apiVersion: apps/v1
kind: Deployment
metadata:
  name: mentor-bot
  namespace: mentor-bot
  labels:
    app: mentor-bot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mentor-bot
  template:
    metadata:
      labels:
        app: mentor-bot
    spec:
      containers:
      - name: mentor-bot
        image: ghcr.io/YOUR_USERNAME/mentor-bot:latest
        imagePullPolicy: Always
        env:
        # Common configuration
        - name: COMMON_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: mentor-bot-secrets
              key: COMMON_BOT_TOKEN
        - name: COMMON_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: mentor-bot-secrets
              key: COMMON_ENCRYPTION_KEY
        - name: COMMON_ADMINS
          valueFrom:
            secretKeyRef:
              name: mentor-bot-secrets
              key: COMMON_ADMINS
        - name: COMMON_ENCRYPTION_ON
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: COMMON_ENCRYPTION_ON
        # PostgreSQL configuration
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: POSTGRES_PORT
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mentor-bot-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: POSTGRES_DB
        - name: POSTGRES_ENABLE_LOGGING
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: POSTGRES_ENABLE_LOGGING
        # Redis configuration
        - name: REDIS_USE_REDIS
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: REDIS_USE_REDIS
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mentor-bot-secrets
              key: REDIS_PASSWORD
        # Provider configuration
        - name: PROVIDER_TOKEN
          valueFrom:
            secretKeyRef:
              name: mentor-bot-secrets
              key: PROVIDER_TOKEN
        - name: PROVIDER_CURRENCY
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: PROVIDER_CURRENCY
        - name: PROVIDER_PRICE
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: PROVIDER_PRICE
        - name: PROVIDER_MENTOR_PRICE
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: PROVIDER_MENTOR_PRICE
        - name: PROVIDER_ENABLED
          valueFrom:
            configMapKeyRef:
              name: mentor-bot-config
              key: PROVIDER_ENABLED
        # OpenAI configuration
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: mentor-bot-secrets
              key: OPENAI_API_KEY
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import requests; requests.get('https://api.telegram.org/bot' + '$COMMON_BOT_TOKEN' + '/getMe')"
          initialDelaySeconds: 30
          periodSeconds: 60
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import requests; requests.get('https://api.telegram.org/bot' + '$COMMON_BOT_TOKEN' + '/getMe')"
          initialDelaySeconds: 10
          periodSeconds: 30
      restartPolicy: Always