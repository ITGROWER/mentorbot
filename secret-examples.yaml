# Примеры секретов для k3s

# 1. Создание секрета из строки
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
  namespace: default
type: Opaque
data:
  username: YWRtaW4=  # base64 encoded "admin"
  password: cGFzc3dvcmQ=  # base64 encoded "password"

---
# 2. Создание секрета из файла (пример)
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: default
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTi...  # base64 encoded certificate
  tls.key: LS0tLS1CRUdJTi...  # base64 encoded private key

---
# 3. Секрет для Docker registry
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: default
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJteXVzZXIiLCJwYXNzd29yZCI6Im15cGFzcyIsImVtYWlsIjoibXllbWFpbEBleGFtcGxlLmNvbSIsImF1dGgiOiJZV1J0YVc0Nk1UWTNNakF6TkRVMk9UUT0ifX19

---
# 4. Использование секрета в поде через volume
apiVersion: v1
kind: Pod
metadata:
  name: pod-with-secret-volume
  namespace: default
spec:
  containers:
  - name: my-container
    image: nginx:latest
    volumeMounts:
    - name: secret-volume
      mountPath: /etc/secrets
      readOnly: true
  volumes:
  - name: secret-volume
    secret:
      secretName: my-secret

---
# 5. Использование секрета в поде через переменные окружения
apiVersion: v1
kind: Pod
metadata:
  name: pod-with-secret-env
  namespace: default
spec:
  containers:
  - name: my-container
    image: nginx:latest
    env:
    - name: USERNAME
      valueFrom:
        secretKeyRef:
          name: my-secret
          key: username
    - name: PASSWORD
      valueFrom:
        secretKeyRef:
          name: my-secret
          key: password

---
# 6. ConfigMap для несекретных данных
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-config
  namespace: default
data:
  database_url: "postgresql://localhost:5432/mydb"
  app_name: "my-application"
  log_level: "info"

---
# 7. Использование ConfigMap в поде
apiVersion: v1
kind: Pod
metadata:
  name: pod-with-configmap
  namespace: default
spec:
  containers:
  - name: my-container
    image: nginx:latest
    envFrom:
    - configMapRef:
        name: my-config
    volumeMounts:
    - name: config-volume
      mountPath: /etc/config
  volumes:
  - name: config-volume
    configMap:
      name: my-config

---
# 8. Deployment с секретами
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-deployment
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-app
        image: my-app:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: my-secret
              key: password
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: my-secret
              key: username
        volumeMounts:
        - name: tls-certs
          mountPath: /etc/ssl/certs
          readOnly: true
      volumes:
      - name: tls-certs
        secret:
          secretName: tls-secret
      imagePullSecrets:
      - name: registry-secret